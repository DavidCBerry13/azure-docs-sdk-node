### YamlMime:UniversalReference
items:
  - uid: '@azure/ai-anomaly-detector.AnomalyDetectorClient'
    name: AnomalyDetectorClient
    fullName: AnomalyDetectorClient
    children:
      - '@azure/ai-anomaly-detector.AnomalyDetectorClient.constructor'
      - '@azure/ai-anomaly-detector.AnomalyDetectorClient.detectChangePoint'
      - '@azure/ai-anomaly-detector.AnomalyDetectorClient.detectEntireSeries'
      - '@azure/ai-anomaly-detector.AnomalyDetectorClient.detectLastPoint'
    langs:
      - typeScript
    type: class
    summary: Client class for interacting with Azure Anomaly Detector service.
    package: '@azure/ai-anomaly-detector'
  - uid: '@azure/ai-anomaly-detector.AnomalyDetectorClient.constructor'
    name: >-
      AnomalyDetectorClient(string, TokenCredential | KeyCredential,
      AnomalyDetectorClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Creates an instance of AnomalyDetectorClient.

      Example usage:

      ```ts

      import { AnomalyDetectorClient, AzureKeyCredential } from
      "@azure/ai-anomaly-detector";


      const client = new AnomalyDetectorClient(
         "<service endpoint>",
         new AzureKeyCredential("<api key>")
      );

      ```
    syntax:
      content: >-
        new AnomalyDetectorClient(endpointUrl: string, credential:
        TokenCredential | KeyCredential, options?: AnomalyDetectorClientOptions)
      parameters:
        - id: endpointUrl
          type:
            - string
          description: ''
        - id: credential
          type:
            - TokenCredential | KeyCredential
          description: Used to authenticate requests to the service.
        - id: options
          type:
            - '@azure/ai-anomaly-detector.AnomalyDetectorClientOptions'
          description: ''
          optional: true
    package: '@azure/ai-anomaly-detector'
  - uid: '@azure/ai-anomaly-detector.AnomalyDetectorClient.detectChangePoint'
    name: 'detectChangePoint(DetectChangePointRequest, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Evaluate change point score of every series point
    syntax:
      content: >-
        function detectChangePoint(body: DetectChangePointRequest, options?:
        OperationOptions)
      parameters:
        - id: body
          type:
            - '@azure/ai-anomaly-detector.DetectChangePointRequest'
          description: >-
            Time series points and granularity is needed. Advanced model
            parameters can also be set
                        in the request if needed.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/ai-anomaly-detector.AnomalyDetectorClientDetectChangePointResponse>
        description: ''
    package: '@azure/ai-anomaly-detector'
  - uid: '@azure/ai-anomaly-detector.AnomalyDetectorClient.detectEntireSeries'
    name: 'detectEntireSeries(DetectRequest, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation generates a model using an entire series, each point is
      detected with the same model.

      With this method, points before and after a certain point are used to
      determine whether it is an

      anomaly. The entire detection can give user an overall status of the time
      series.
    syntax:
      content: >-
        function detectEntireSeries(body: DetectRequest, options?:
        OperationOptions)
      parameters:
        - id: body
          type:
            - '@azure/ai-anomaly-detector.DetectRequest'
          description: >-
            Time series points and period if needed. Advanced model parameters
            can also be set in
                        the request.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/ai-anomaly-detector.AnomalyDetectorClientDetectEntireResponse>
        description: ''
    package: '@azure/ai-anomaly-detector'
  - uid: '@azure/ai-anomaly-detector.AnomalyDetectorClient.detectLastPoint'
    name: 'detectLastPoint(DetectRequest, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This operation generates a model using points before the latest one. With
      this method, only

      historical points are used to determine whether the target point is an
      anomaly. The latest point

      detecting operation matches the scenario of real-time monitoring of
      business metrics.
    syntax:
      content: >-
        function detectLastPoint(body: DetectRequest, options?:
        OperationOptions)
      parameters:
        - id: body
          type:
            - '@azure/ai-anomaly-detector.DetectRequest'
          description: >-
            Time series points and period if needed. Advanced model parameters
            can also be set in
                        the request.
        - id: options
          type:
            - OperationOptions
          description: |
            The options parameters.
          optional: true
      return:
        type:
          - >-
            Promise<@azure/ai-anomaly-detector.AnomalyDetectorClientDetectLastPointResponse>
        description: ''
    package: '@azure/ai-anomaly-detector'
references:
  - uid: '@azure/ai-anomaly-detector.AnomalyDetectorClientOptions'
    name: AnomalyDetectorClientOptions
    spec.typeScript:
      - name: AnomalyDetectorClientOptions
        fullName: AnomalyDetectorClientOptions
        uid: '@azure/ai-anomaly-detector.AnomalyDetectorClientOptions'
  - uid: '@azure/ai-anomaly-detector.DetectChangePointRequest'
    name: DetectChangePointRequest
    spec.typeScript:
      - name: DetectChangePointRequest
        fullName: DetectChangePointRequest
        uid: '@azure/ai-anomaly-detector.DetectChangePointRequest'
  - uid: >-
      Promise<@azure/ai-anomaly-detector.AnomalyDetectorClientDetectChangePointResponse>
    name: AnomalyDetectorClientDetectChangePointResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AnomalyDetectorClientDetectChangePointResponse
        fullName: AnomalyDetectorClientDetectChangePointResponse
        uid: >-
          @azure/ai-anomaly-detector.AnomalyDetectorClientDetectChangePointResponse
      - name: '>'
        fullName: '>'
  - uid: '@azure/ai-anomaly-detector.DetectRequest'
    name: DetectRequest
    spec.typeScript:
      - name: DetectRequest
        fullName: DetectRequest
        uid: '@azure/ai-anomaly-detector.DetectRequest'
  - uid: >-
      Promise<@azure/ai-anomaly-detector.AnomalyDetectorClientDetectEntireResponse>
    name: AnomalyDetectorClientDetectEntireResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AnomalyDetectorClientDetectEntireResponse
        fullName: AnomalyDetectorClientDetectEntireResponse
        uid: '@azure/ai-anomaly-detector.AnomalyDetectorClientDetectEntireResponse'
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<@azure/ai-anomaly-detector.AnomalyDetectorClientDetectLastPointResponse>
    name: AnomalyDetectorClientDetectLastPointResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AnomalyDetectorClientDetectLastPointResponse
        fullName: AnomalyDetectorClientDetectLastPointResponse
        uid: >-
          @azure/ai-anomaly-detector.AnomalyDetectorClientDetectLastPointResponse
      - name: '>'
        fullName: '>'
